pipeline {
    agent any
    stages {

        stage('Clone') {
            steps {
                script {
                    // Check the files in the workspace
                    sh 'ls -la'
                }
            }
        }

        stage('Use the template') {
            steps {
                script {
                    echo "Doing first..."
                    
                    // Set the s3Prefix variable (assuming you want to define it somewhere)
                    def s3Prefix = "jenkins_backups"  // Define this or pass it dynamically
                    
                    // Run AWS CLI commands and capture the output in environment variables
                    env.S3_FILE_NAME = sh(
                        script: """
                            aws s3api list-objects \
                                --bucket jenkinsupdate-test-bucket \
                                --prefix "${s3Prefix}" \
                                --query "Contents | sort_by(@, &LastModified) | [-1]" \
                                --output json | jq -r '.Key' | sed 's/jenkins_backups\\///'
                        """,
                        returnStdout: true
                    ).trim()
                    
                    echo "File Name: ${env.S3_FILE_NAME}"

                    env.S3_LAST_MODIFIED = sh(
                        script: """
                            aws s3api list-objects \
                                --bucket jenkinsupdate-test-bucket \
                                --prefix "${s3Prefix}" \
                                --query "Contents | sort_by(@, &LastModified) | [-1]" \
                                --output json | jq -r '.LastModified'
                        """,
                        returnStdout: true
                    ).trim()
                    
                    echo "Last Modified: ${env.S3_LAST_MODIFIED}"

                    // You can continue your logic here
                    echo "Completed fetching the S3 object details"
                }
            }
        }
    }
}
